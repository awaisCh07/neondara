rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow users to create and read their own user document.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.uid == userId;
    }

    // Users can only manage their own 'people' documents.
    match /people/{personId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Users can only manage their own 'neondara_entries' documents.
    match /neondara_entries/{entryId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Users can only manage their own 'shared_bills' documents.
    match /shared_bills/{billId} {
      allow read, write, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Since all list queries in the app are filtered by userId, 
    // we can simplify list rules. A user needs to be authenticated to list anything.
    match /{path=**}/documents/{document} {
        allow list: if request.auth != null;
    }
  }
}
